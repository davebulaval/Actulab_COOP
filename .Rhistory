(VaRM2 <- qpois(0.99, 2.1))
TVaRM2 <- 1 / 0.01 * integrate(function(u) qpois(u, 2.1), lower = 0.99, upper = 1)$value
TVaRM2
(VaRM3 <- qpois(0.99, 1.3))
TVaRM3 <- 1 / 0.01 * integrate(function(u) qpois(u, 1.3), lower = 0.99, upper = 1)$value
TVaRM3
panjer.poisson(3.3, FC, 4 )
sum(panjer.poisson(3.3, FC, 4 ))
sum(panjer.poisson(3.3, FC, 10 ))
sum(panjer.poisson(3.3, FC, 100 ))
panjer.poisson(3.3, FC, 100 )
panjer.poisson(3.3, FC, 15 )
sum(panjer.poisson(3.3, FC, 15 ))
sum(panjer.poisson(3.3, FC, 16 ))
sum(panjer.poisson(3.3, FC, 18 ))
sum(panjer.poisson(3.3, FC, 20 ))
panjer.poisson(3.3, FC, 20 )
fN <- panjer.poisson(3.3, FC, 20 )
FN <- cumsum(fN)
FN
FN[12]
FN[13]
mean(fN * 14:20)
mean(fN * 14:20) / 0.01
mean(fN * 14:20) + 13 * (FN[13] - 0.99) / 0.01
fb1 <- dnbinom(0:10, size = 4, mu = 1)
fb1
sum(fb1)
sum(fb1 * 0 : 10)
fb2<- dnbinom(0:10, size = 3, mu = 2)
sum(fb2 * 0 : 10)
sum(fN * 14:20) + 13 * (FN[13] - 0.99) / 0.01
sum(fN * 13:20) + 12 * (FN[12] - 0.99) / 0.01
sum(fN * 13:20) + 12 * (FN[12] - 0.99) / 0.01
sum(fN * 14:20) + 13 * (FN[13] - 0.99) / 0.01
TVaRM1 + TVaRM2 + TVaRM3
(sum(fN * 13:20) + 12 * (FN[12] - 0.99)) / 0.01
(sum(fN * 14:20) + 13 * (FN[13] - 0.99)) / 0.01
(sum(fN * 14:20) + 13 * (FN[13] - 0.99))
(sum(fN * 13:20) + 12 * (FN[12] - 0.99))
TVaRM1 + TVaRM2 + TVaRM3 -
sum(fN * 13:20)
fN
TVaRM1 + TVaRM2 + TVaRM3 -
sum(fN * 13:21)
TVaRM1 + TVaRM2 + TVaRM3 -
sum(fN * 13:20)
sum(fN * 13:20)
sum(fN * 13:21)
sum(fN[13:21] * 13:21)
(sum(fN[13:21] * 13:21) + 12 * (FN[12] - 0.99))
(sum(fN[13:21] * 13:21) + 12 * (FN[12] - 0.99)) / 0.01
(sum(fN[14:21] * 14:21) + 13 * (FN[13] - 0.99)) / 0.01
(TVaRN <- sum(fN[14:21] * 14:21) + 13 * (FN[13] - 0.99)) / 0.01
TVaRM1 + TVaRM2 + TVaRM3 - TVaRN
(TVaRN <- sum(fN[14:21] * 14:21) + 13 * (FN[13] - 0.99)) / 0.01
TVaRM1 + TVaRM2 + TVaRM3 - TVaRN
TVaRM1 + TVaRM2 + TVaRM3
source('C:/Users/David/Dropbox/Actuariat Automne 2017/ACT-3000/2017/Solution R exercices/Algo et FFT/Algo.R', echo=TRUE)
TVaRN
(TVaRN <- sum(fN[14:21] * 14:21) + 13 * (FN[13] - 0.99) / 0.01)
TVaRM1 + TVaRM2 + TVaRM3 - TVaRN
(TVaRN <- sum(fN[14:21] * 14:21) + 13 * (FN[13] - 0.99)) / 0.01
TVaRN <- (sum(fN[14:21] * 14:21) + 13 * (FN[13] - 0.99)) / 0.01
TVaRM1 + TVaRM2 + TVaRM3 - TVaRN
sum(fN[13:21] * 13:21)
sum(fN[13:21] * 13:21)
sum(fN[13:21] * 13:21) + sum(fN[1:12] * 0:12)
sum(fN * 0:21)
length(fN)
sum(fN * 0:20)
TVaRN <- (sum(fN[14:21] * 13:20) + 13 * (FN[13] - 0.99)) / 0.01
TVaRN
TVaRN <- (sum(fN[13:21] * 12:20) + 12 * (FN[12] - 0.99)) / 0.01
TVaRN
TVaRN <- (sum(fN[14:21] * 13:20) + 13 * (FN[13] - 0.99)) / 0.01
TVaRM1 + TVaRM2 + TVaRM3 - TVaRN
mu <- ln(10) -0.36/2
sigma <- 0.6
mu <- log(10) -0.36/2
sigma <- 0.6
sapply(0:500, function(k) plnorm(k, mu, sigma) - plnorm(k - 1, mu, sigma))
X <- sapply(0:500, function(k) plnorm(k, mu, sigma) - plnorm(k - 1, mu, sigma))
sum(X)
x[16]
X[16]
X[c(1, 11)]
fX <- dnbinom(100, r, q)
r <- 1.5
q <- 1/3
fX <- dnbinom(100, r, q)
fX
fX <- dnbinom(0:100, r, q)
fX
fX <- dnbinom(0:50, r, q)
fX
fX <- c(fX, numeric(1000))
fX
phiX <- fft(fX)
B <- sapply(0:500, function(k) plnorm(k, mu, sigma) - plnorm(k - 1, mu, sigma))
B[c(1, 11)]
r <- 1.5
q <- 1/3
fX <- dnbinom(0:50, r, q)
fX <- c(fX, numeric(1000))
phiX <- fft(fX)
Pxt <- function(t){
(q / (1 - (1-q)B))^r
}
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
Pxt(phiX)
phiX <- fft(fX)
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
Pxt(phiX)
phiX <- fft(fX)
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
Pxt(phiX)
fX <- c(fX, numeric(1000))
fX
fX <- dnbinom(0:15, r, q)
fX <- c(fX, numeric(1000))
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
Pxt(phiX)
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF
FF[1:10]
B <- sapply(0:500, function(k) plnorm(k, mu, sigma) - plnorm(k - 1, mu, sigma))
B[c(1, 11)]
r <- 1.5
q <- 1/3
fX <- dnbinom(0:15, r, q)
fX <- c(fX, numeric(1000))
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF[1:10]
FF[1:16]
fX <- dnbinom(0:25, r, q)
fX <- c(fX, numeric(1000))
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF[1:16]
q <- 1 - 1/3
fX <- dnbinom(0:25, r, q)
fX <- c(fX, numeric(1000))
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF[1:16]
r <- 1.5
q <- 1/3
fX <- dnbinom(0:25, r, q)
fX <- c(fX, numeric(1000))
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF[1:16]
fX
dnbinom(0, r, q)
fX <- dnbinom(0:35, r, q)
fX <- c(fX, numeric(1000))
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-q)*B))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF[1:16]
dnbinom(0, r, q)
phiFF <- Pxt(phiX)
phiFF[1]
phiFF[2]
Pxt <- function(t){
(q / (1 - (1-q)*t))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF[1:16]
fX <- c(B, numeric(500))
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-t)*B))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF[1:16]
Pxt <- function(t){
(q / (1 - (1-q)*t))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))
FF[1:16]
fX <- c(B, numeric(mm - length(B)))
phiX <- fft(fX, inverse = F)
Pxt <- function(t){
(q / (1 - (1-q)*t))^r
}
phiFF <- Pxt(phiX)
FF <- Re(fft(phiFF, inverse = TRUE))/mm
FF[1:16]
FF[15]
FF[16]
FF[1]
FF[1]
FF[16]
FF[21]
cumsum(FF)
FFF <- cumsum(FF)
FFF[51]
sapply(0:600, function(j) max(j -50, 0))
sapply(0:600, function(j) max(j -50, 0) * FF[j + 1])
sum(sapply(0:600, function(j) max(j -50, 0) * FF[j + 1]))
rand <- function(n, a, m, seed)
{
x <- numeric(n + 1)
x[1] <- seed
for (i in seq(n))
x[i + 1] <- (a * x[i]) %% m
x[-1]/m
}
rand(100, 41358, 2^31 - 1, 20150418)
U[1]
U <- rand(100, 41358, 2^31 - 1, 20150418)
U[1]
U <- rand(3 * 100, 41358, 2^31 - 1, 20150418)
U[2]
U <- rand(3 * 1000, 41358, 2^31 - 1, 20150418)
U1 <- U[seq(1:3000, by = 3)]
U1 <- U[seq(from = 1, to = 3000, by = 3)]
simul <- 10000
U <- rand(3 * simul, 41358, 2^31 - 1, 20150418)
U1 <- U[seq(from = 1, to = 3 * simul, by = 3)]
U1[c(1,1000,10000)]
U2 <- U[seq(from = 2, to = 3 * simul, by = 3)]
U2[c(1,1000,10000)]
U3 <- U[seq(from = 3, to = 3 * simul, by = 3)]
U3[c(1,1000,10000)]
Y1 <- qgamma(U1, 2, 1)
Y2 <- qgamma(U2,0.5. 1)
Y2 <- qgamma(U2, 0.5, 1)
Y3 <- qgamma(U3, 1, 1)
beta1 <- 1 / 100
beta2 <- 1 / 200
X1 <- 1 / beta1 * (Y1 + Y3)
X2 <- 1 / beta2 * (Y2 + Y3)
X1[c(2,3,4)]
X2[c(2,3,4)]
X1[X1 < 500]
X1 < 500
sum(X1 < 500)
(X1 < 500) * (X2 < 500)
sum((X1 < 500) * (X2 < 500) )
sum((X1 < 500) * (X2 < 500) ) / simul
sapply(1:simul, function(i) max(X1[i] - 500, 0) * (X2[i] <= 500))
sum(sapply(1:simul, function(i) max(X1[i] - 500, 0) * (X2[i] <= 500))) / simul
sum(sapply(1:simul, function(i) max(X1[i] - 500, 0) * (X2[i] > 500))) / simul
kappa <- 0.99
j0 <- kappa * simul
sort(X1 + X2)[j0]
VaRS <- sort(X1 + X2)[j0]
sum((X1 + X2) > VaRS)
(X1 + X2) > VaRS
sum((X1 + X2) > VaRS) / (1 - kappa) * m
S <- X1 + X2
VaRS <- sort(S)[j0]
S> VaRS
sum( sapply(j0:simul, function(i) S[i])) / (1 - kappa) * m
sum( sapply(j0:simul, function(i) S[i]))
j0
S <- sort(S)
VaRS <- sort(S)[j0]
sum( sapply( (j0+1):simul, function(i) S[i]))
sum( sapply( (j0+1):simul, function(i) S[i])) / 100
set.seed(19661122)
U <- runif(simul)
U[1]
U <- runif(simul * 2)
U[1]
set.seed(19661122)
U <- runif(simul * 2)
U[1]
X1 <- qpareto(U[seq(from = 1 , to = simul * 2, by = 2)])
X1 <- qpareto(U[seq(from = 1 , to = simul * 2, by = 2)], 3, 200)
X2 <- qpareto(U[seq(from = 2 , to = simul * 2, by = 2)], 2.5, 150)
S <- X1 + X2
S[c(1,2)]
seq(from = 1 , to = simul * 2, by = 2)
?qpareto
mean(X1)
mean(X2)
S <- X1 + X2
S[c(1,2)]
X2 <- qpareto(1 - U[seq(from = 2 , to = simul * 2, by = 2)], 2.5, 150)
S <- X1 + X2
S[c(1,2)]
U <- runif(simul )
U[1]
X1 <- qpareto(U[seq(from = 1 , to = simul * 2, by = 2)], 3, 200)
X2 <- qpareto(1 - U[seq(from = 1 , to = simul * 2, by = 2)], 2.5, 150)
S <- X1 + X2
S[c(1,2)]
X1 <- qpareto(U[1:simul], 3, 200)
X2 <- qpareto(1 - U[1:simul], 2.5, 150)
S <- X1 + X2
S[c(1,2)]
U[1]
set.seed(19661122)
U <- runif(simul )
U[1]
X1 <- qpareto(U[1:simul], 3, 200)
X2 <- qpareto(1 - U[1:simul], 2.5, 150)
S <- X1 + X2
S[c(1,2)]
S[S < 100]
2 * (sum (S[S < 100] + S[S > 1000] ))
2 * (sum (S[S < 100]) + sum(S[S > 1000] ))
2 * (sum (S[S < 100]) + sum(S[S > 1000] )) / simul
2 * (sum (S[S <= 100]) + sum(S[S > 1000] )) / simul
2 * (sum (S[S <= 100]) + sum(S[S => 1000] )) / simul
2 * (sum (S[S <= 100]) + sum(S[S > 1000] )) / simul
2 * (sum (S[S < 100]) + sum(S[S > 1000] )) / simul
X1 <- qpareto(U[1:simul], 3, 200)
X2 <- qpareto(U[1:simul], 2.5, 150)
S <- X1 + X2
S[c(1,2)]
2 * (sum (S[S < 100]) + sum(S[S > 1000] )) / simul
var(S)
set.seed(19661122)
U <- runif(simul )
U[1]
X1 <- qpareto(U[1:simul], 3, 200)
X2 <- qpareto(1 - U[1:simul], 2.5, 150)
S <- X1 + X2
S[c(1,2)]
2 * (sum (S[S < 100]) + sum(S[S > 1000] )) / simul
var(S)
cor(S, method = "Pearson")
cor(S, method = "pearson")
cor(X1, X2 , method = "pearson")
source('C:/Users/David/Dropbox/Actuariat Automne 2017/ACT-3000/2017/Solution R exercices/Examen info partiel/Info partiel.R')
sum(!is.na(c(3,NA, 4, 6, NA))
sum(!is.na(c(3,NA, 4, 6, NA))
)
sum(!is.na(c(3,NA, 4, 6, NA)))
norm <- function(x){
xlen <- length(x)
for (i in seq_len(xlen)){
(sum(x[i]^2))^(1/2)
}
}
norm(c(2, 4, 1))
norm <- function(x){
xlen <- length(x)
for (i in seq_len(xlen)){
(sum(x[i]^2)^(1/2))
}
}
norm(c(2, 4, 1))
norm <- function(x){
xlen <- length(x)
for (i in seq_len(xlen)){
resul <- (sum(x[i]^2)^(1/2))
}
resul
}
norm(c(2, 4, 1))
norm <- function(x){
g(x) <- sum(x^2)
(g(x))^0.5
}
norm(c(2,4,1))
norm <- function(x){
g<- sum(x^2)
g^0.5
}
norm(c(2,4,1))
norm <- function(x){
sqrt(sum(x[1:seq_along(x)]^2))
}
norm(c(2,4,1))
?sum
norm <- function(x){
xlen <- length(x)
for (i in seq_len(xlen)){
resul <- (sum(x[[i]]^2)^(1/2))
}
resul
}
norm(c(2, 4, 1))
x <- c(1,2,3)
x[[1]]
x[[2]]
x[[3]]
x <- c(1,2,4)
x[[3]]
norm <- function(x){
for (i in seq_along(x)){
resul <- sum((x[[i]]^2))
}
sqrt(resul)
}
norm(c(2, 4, 1))
x <- function(x) (sum(x^2)^0.5)
x(c(1,2,4))
norm <- function(x){
xlen <- length(x)
for (i in seq_len(xlen)){
x[i] <- x[i]^2
}
y <- sqrt(sum(x))
}
norm <- function(x){
xlen <- length(x)
for (i in seq_len(xlen)){
x[i] <- x[i]^2
}
y <- sqrt(sum(x))
y
}
norm <- function(x){
xlen <- length(x)
for (i in seq_len(xlen)){
x[i] <- x[i]^2
}
y <- sqrt(sum(x))
y
}
norm(c(1,2,4))
norm <- function(x){
xlen <- length(x)
for (i in seq_len(xlen)){
x[i] <- x[i]^2
}
y <- sqrt(sum(x))
}
norm(c(1,2,4))
square(2)
norm <- function(x){
(sum(c(x[1:length(x)])^2))^0.5
}
norm(c(2,4,1))
sum((w <- 1:3) * c(1,4,3)) / sum(w)
logical(3)
norm <- function(x){
sum(x[seq_len(x)]^2)^0.5
}
norm(c(1,2,4))
norm <- function(x){
sum(x[seq_along(x)]^2)^0.5
}
norm(c(1,2,4))
for(i in c(1:3))
print(i)
somme <- numeric(0)
somm
somme
somme <- somme + 1
somme
install.packages(c("backports", "BH", "gridExtra", "knitr", "lazyeval", "lme4", "Rcpp", "rlang", "scales", "tibble"))
library(rgdal)
# Shapefile
path <- setwd("C:/Users/David/Documents/GitHub/Actulab_COOP/")
LatLongData <- rgdal::readOGR(dsn = paste(path, "/Dataset/StatCan_FSA_boundaries", sep = ""),
layer = "StatsCanada_FSA_boundaries")
path
# Shapefile
LatLongData <- rgdal::readOGR(dsn = "C:/Users/David/Documents/GitHub/Actulab_COOP/Dataset/StatCan_FSA_boundaries",
layer = "StatsCanada_FSA_boundaries")
LatLongDataQC <- subset(LatLongData, substr(LatLongData$CFSAUID, 1, 1) %in% c("G", "H", "J"))
FSA.shape <- rgdal::readOGR(dsn = "C:/Users/David/Documents/GitHub/Actulab_COOP/Dataset/Dataset/shapefile",
layer = "grta000a11a_f")
FSA.shape <- rgdal::readOGR(dsn = "C:/Users/David/Documents/GitHub/Actulab_COOP/Dataset/shapefile",
layer = "grta000a11a_f")
FSA.shapeQC <- subset(FSA.shape, substr(FSA.shape$RTACIDU, 1, 3) %in% LatLongDataQC$CFSAUID)
shiny::runApp('shiny/personnasIdentificateur')
runApp('shiny/personnasIdentificateur')
runApp('shiny/personnasIdentificateur')
runApp('shiny/personnasIdentificateur')
runApp('shiny/personnasIdentificateur')
runApp('shiny/personnasIdentificateur')
runApp('shiny/personnasIdentificateur')
runApp('shiny/personnasIdentificateur')
source("/load_data.R")
find_rtools()
getwd()
